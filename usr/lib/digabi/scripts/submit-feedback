#!/bin/bash

#
# Submit collected system information to Digabi server
#
# (c) 2013, 2014 The Matriculation Examination Board of Finland
# http://digabi.fi/
# Author: Ville Korhonen <ville.korhonen@ylioppilastutkinto.fi>
# GPLv3
#
SUBMIT_URL="$(digabi config get --global feedback_url)"
HOOKS_DIR="/usr/lib/digabi/feedback-hooks"
LOGFILE="$(mktemp digabi-feedback.XXXXXXX.log)"
APPNAME="digabi-feedback"
LOGFILE_URL="file://$(readlink -f ${LOGFILE})"

# Set outputs according to the language setting
THIS_LANG=${LANG:0:2}

if [ "${THIS_LANG}" == "fi" ]; then
  # Finnish
  MESSAGE_PERMISSION="<b>Haluatko lähettää laitetiedot Digabi-projektille?</b>\n\n\
Kerättyjä laitetietoja käytetään kertomalla muille käyttäjille toimivista laitekokoonpanoista ja yhteensopivuusongelmien etsimiseen.\n\n\
Kerätyt tiedot sisältävät tietokoneen merkin ja mallin, prosessorin tyypin, muistin koon, tietoja laitteista jne. <a href='https://digabi.fi/feedback'>Katso kuvaus keräämistämme tiedoista</a> ja <a href='${LOGFILE_URL}'>tutki kerättyä aineistoa</a>.\n\n\
Tiedot lähetetään salattua yhteyttä käyttäen eikä henkilökohtaisia tietojasi lähetetä.\n\n\
<a href='https://digabi.fi/privacy'>Lue Digabi-projektin tietosuojasta</a>"
  # Unfortunately the zenity --entry method does not support Pango Markup Language
  MESSAGE_ASK_EMAIL="Kerro meille kuinka käynnistit koneesi!\n\n\
Koneen käynnistäminen USB-muistilta voi olla hankalaa. Me olemme tehneet\n\
sinulle helpoksi muiden auttamisen. Antamalla sähköpostisi allaolevaan\n\
kenttään saat sähköpostin. Viestissä kerrotaan, miten voit raportoida käyttämäsi\n\
BIOS-asetukset ja auttaa näin muita saman konemallin käyttäjiä.\n\n\
Sähköpostiosoitettasi ei säilytetä ohjeiden lähettämisen jälkeen.\n\n\
- Jos haluat lisäohjeet sähköpostilla, anna osoitteesi alla.\n\
- Napsauta Peruuta, jos et halua ottaa osaa juuri nyt."
  MESSAGE_CANCELLED="Tietojen lähetys on peruutettu. Käynnistä tämä sovellus uudelleen, jos haluat lähettää tiedot."
  MESSAGE_SUBMIT_OK="Tietojen lähetys onnistui"
  MESSAGE_SUBMIT_FAILED="Tietojen lähetys epäonnistui\n"

elif [ "${THIS_LANG}" == "sv" ]; then
  # Swedish
  MESSAGE_PERMISSION="<b>På svenska: Submit device information to Digabi Project?</b>\n\n\
Collected data will be used for creating list of supported devices and for troubleshooting purposes.\n\n\
This data includes computer model, manufacturer, cpu type, size of the memory, list of devices etc. \
<a href='https://digabi.fi/feedback'>See full description about data we collect</a> and <a href='${LOGFILE_URL}'>preview collected data</a>.\n\n\
Connection is encrypted, and no personal information will be sent.\n\n\
<a href='https://digabi.fi/privacy'>Read Digabi Privacy Policy</a>"
  MESSAGE_ASK_EMAIL="På svenska: Tell us how you booted to USB!\n\n\
Booting to USB memory stick may be challenging in some devices. We have
made it easy for you to report BIOS settings required to boot your device.\n\n\
By entering your email below you will get further instructions how you can\n\
share your BIOS settings and help other users to boot their devices.\n\n\
Your email address will not be stored after we have sent the instructions\n\
to you.\n\n\
- Please enter your email if you would like to receive the instructions.\n\
- Click Cancel if you don't want to participate at the moment."
  MESSAGE_CANCELLED="På svenska: Data submission cancelled per your request. Re-run this application if you want to submit."
  MESSAGE_SUBMIT_OK="På svenska: Data submitted successfully"
  MESSAGE_SUBMIT_FAILED="På svenska: Data submission failed\n"

else
  # Fallback: English
  MESSAGE_PERMISSION="<b>Submit device information to Digabi Project?</b>\n\n\
Collected data will be used for creating list of supported devices and for troubleshooting purposes.\n\n\
This data includes computer model, manufacturer, cpu type, size of the memory, list of devices etc. <a href='https://digabi.fi/feedback'>See full description about data we collect</a> and <a href='${LOGFILE_URL}'>preview collected data</a>.\n\n\
Connection is encrypted, and no personal information will be sent.\n\n\
<a href='https://digabi.fi/privacy'>Read Digabi Privacy Policy</a>"
  # Unfortunately the zenity --entry method does not support Pango Markup Language
  MESSAGE_ASK_EMAIL="Tell us how you booted to USB!\n\n\
Booting to USB memory stick may be challenging in some devices. We have
made it easy for you to report BIOS settings required to boot your device.\n\n\
By entering your email below you will get further instructions how you can\n\
share your BIOS settings and help other users to boot their devices.\n\n\
Your email address will not be stored after we have sent the instructions\n\
to you.\n\n\
- Please enter your email if you would like to receive the instructions.\n\
- Click Cancel if you don't want to participate at the moment."
  MESSAGE_CANCELLED="Data submission cancelled per your request. Re-run this application if you want to submit."
  MESSAGE_SUBMIT_OK="Data submitted successfully"
  MESSAGE_SUBMIT_FAILED="Data submission failed\n"

fi

collect_data() {
  sudo /usr/bin/digabi collect-feedback ${LOGFILE}
}

ask_permission() {
  zenity --question --title="${APPNAME}" --text="${MESSAGE_PERMISSION}"
  echo "$?"
}

ask_email() {
  zenity --entry --title="${APPNAME}" --text="${MESSAGE_ASK_EMAIL}"
}

collect_data

if [ "$(ask_permission)" = 1 ]
then
  zenity --warning --title="${APPNAME}" --text="${MESSAGE_CANCELLED}"
  exit 1
fi

EMAIL=`ask_email`

ATTEMPTS="15"
TIMEOUT="5"

# Source for with_backoff function: <http://stackoverflow.com/questions/8350942/how-to-re-run-the-curl-command-automatically-when-the-error-occurs>
with_backoff () {
  local max_attempts=${ATTEMPTS-5}
  local timeout=${TIMEOUT-1}
  local attempt=0
  local exitCode=0

  while [[ $attempt < $max_attempts ]]
  do
    set +e
    "$@"
    exitCode=$?
    set -e

    if [[ $exitCode == 0 ]]
    then
      break
    fi

    echo "Failure! Retrying in $timeout.." 1>&2
    sleep $timeout
    attempt=$(( attempt + 1 ))
    timeout=$(( timeout * 2 ))
  done

  if [[ $exitCode != 0 ]]
  then
    echo "You've failed me for the last time! ($@)" 1>&2
    echo "999:backoff"
  fi

  return $exitCode
}

if [ -r "${LOGFILE}" ]; then
  RESULT=`with_backoff curl -s -F"dup=true" -F"version=2.0" -F"email=${EMAIL}" -F"data=@${LOGFILE}" "${SUBMIT_URL}"`
  RESULT_CODE=`echo "${RESULT}" | cut -f1 -d":"`
  if [ "${RESULT_CODE}" == "0" ]; then
     zenity --info --title="${APPNAME}" --text="${MESSAGE_SUBMIT_OK}"
  else
     zenity --error --title"${APPNAME}" --text="${MESSAGE_SUBMIT_FAILED}${RESULT}"
  fi
fi

#if [ ! -z "${LOGFILE}" ]
#  then
#  rm "${LOGFILE}"
#fi
