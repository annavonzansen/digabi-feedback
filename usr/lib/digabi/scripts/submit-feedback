#!/bin/bash

#
# Submit collected system information to Digabi server
#
# (c) 2013, 2014 The Matriculation Examination Board of Finland
# http://digabi.fi/
# Author: Ville Korhonen <ville.korhonen@ylioppilastutkinto.fi>
# GPLv3
#
SUBMIT_URL="$(digabi config get feedback_url)"
HOOKS_DIR="/usr/lib/digabi/feedback-hooks"
LOGFILE="$(mktemp digabi-feedback.XXXXXXX.log)"
APPNAME="digabi-feedback"
LOGFILE_URL="file://$(readlink -f ${LOGFILE})"

collect_data() {
  sudo /usr/bin/digabi collect-feedback >${LOGFILE}
  echo "TODO"
}

ask_permission() {
  MESSAGE="<b>Submit device information to Digabi Project?</b>\n\n\
Do you want to submit device information to Digabi project?\n\
Collected data will be used for creating list of supported devices and for troubleshooting purposes.\n\n\
This data includes computer model, manufacturer, cpu type, size of the memory, list of devices etc. \
<a href='https://digabi.fi/feedback'>See full description about data we collect</a> and <a href='${LOGFILE_URL}'>preview collected data</a>.\n\n\
Connection is encrypted, and no personal information will be sent.\n\n\
<a href='https://digabi.fi/privacy'>Read Digabi Privacy Policy</a>"
  zenity --question --title="${APPNAME}" --text="${MESSAGE}"
  echo "$?"
}


collect_data

if [ "$(ask_permission)" = 1 ]
then
  zenity --warning --title="${APPNAME}" --text="Data submission cancelled per your request. Re-run this application if you want to submit."
  exit 1
fi


ATTEMPTS="15"
TIMEOUT="5"

# Source for with_backoff function: <http://stackoverflow.com/questions/8350942/how-to-re-run-the-curl-command-automatically-when-the-error-occurs>
with_backoff () {
  local max_attempts=${ATTEMPTS-5}
  local timeout=${TIMEOUT-1}
  local attempt=0
  local exitCode=0

  while [[ $attempt < $max_attempts ]]
  do
    set +e
    "$@"
    exitCode=$?
    set -e

    if [[ $exitCode == 0 ]]
    then
      break
    fi

    echo "Failure! Retrying in $timeout.." 1>&2
    sleep $timeout
    attempt=$(( attempt + 1 ))
    timeout=$(( timeout * 2 ))
  done

  if [[ $exitCode != 0 ]]
  then
    echo "You've failed me for the last time! ($@)" 1>&2
  fi

  return $exitCode
}

if [ -r "${LOGFILE}" ]
   then
       with_backoff curl -F"dup=true" -F"version=2.0" -F"data=@${LOGFILE}" "${SUBMIT_URL}"
fi

#if [ ! -z "${LOGFILE}" ]
#  then
#  rm "${LOGFILE}"
#fi
